-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Dumps the names and values of expressions to ease debugging.
--   
--   Can be used with <a>Debug.Trace</a>, <a>Test.QuickCheck</a>, or just
--   plain old <a>System.IO</a>'s "putStrLn".
--   
--   See README.md and FEATURES.md for further details.
@package dump
@version 0.2.8


-- | <a>d</a>, <a>dd</a>, and <a>dump</a> are aliases of the same
--   <a>QuasiQuoter</a>. you can choose to imort just one of them:
--   
--   <pre>
--   import Debug.Dump (dd)
--   </pre>
--   
--   Example usage:
--   
--   <pre>
--   {-# LANGUAGE QuasiQuotes #-}
--   
--   import Debug.Dump
--   
--   main = print [d|a, a+1, map (+a) [1..3]|]
--     where a = 2
--   </pre>
--   
--   which prints:
--   
--   <pre>
--   (a) = 2   (a+1) = 3       (map (+a) [1..3]) = [3,4,5]
--   </pre>
--   
--   by turnint this String
--   
--   <pre>
--   "a, a+1, map (+a) [1..3]"
--   </pre>
--   
--   into this expression
--   
--   <pre>
--   ( "(a) = " ++ show (a)            ++ "t  " ++
--     "(a+1) = " ++ show (a + 1)      ++ "t  " ++
--     "(map (+a) [1..3]) = " ++ show (map (+ a) [1 .. 3])
--   )
--   </pre>
module Debug.Dump

-- | Shorthand for <a>dump</a>.
d :: QuasiQuoter

-- | Shorthand for <a>dump</a>.
dd :: QuasiQuoter

-- | This is the main <a>QuasiQuoter</a>.
dump :: QuasiQuoter
instance GHC.Base.Functor Debug.Dump.HsExp
instance GHC.Base.Applicative Debug.Dump.HsExp
